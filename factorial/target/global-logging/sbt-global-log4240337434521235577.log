[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\shiva\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\shiva\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 159.2523ms
[debug]       Load.loadUnit: defsScala took 0.5074ms
[debug] [Loading] Scanning directory C:\Users\shiva\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\shiva\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.6254 ms
[debug]           Load.resolveProject(global-plugins) took 67.3354ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\shiva\.sbt\1.0\plugins, plugins: List(<none>))) took 135.5982ms
[debug] [Loading] Done in C:\Users\shiva\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 173.1471ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3788ms
[debug]     Load.loadUnit(file:/C:/Users/shiva/.sbt/1.0/plugins/, ...) took 346.0017ms
[debug]   Load.apply: load took 696.8012ms
[debug]   Load.apply: resolveProjects took 7.7555ms
[debug]   Load.apply: finalTransforms took 87.2641ms
[debug]   Load.apply: config.delegates took 15.5794ms
[debug]   Load.apply: Def.make(settings)... took 1818.5457ms
[debug]   Load.apply: structureIndex took 173.551ms
[debug]   Load.apply: mkStreams took 3.0054ms
[info] loading global plugins from C:\Users\shiva\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5885.6736ms
[debug]           Load.loadUnit: plugins took 33.706ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1\project
[debug]             Load.loadUnit: mkEval took 13.6488ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9302 ms
[info] loading settings for project week1-build from idea.sbt ...
[debug]               Load.resolveProject(week1-build) took 15.4637ms
[debug]             Load.loadTransitive: finalizeProject(Project(id week1-build, base: C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1\project, plugins: List(<none>))) took 19.4225ms
[debug] [Loading] Done in C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1\project, returning: (week1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3738.6025ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.7911ms
[debug]         Load.loadUnit(file:/C:/Users/shiva/Documents/AB_TRAINING/fpp-scala/week1/project/, ...) took 3781.6023ms
[debug]       Load.apply: load took 3783.9496ms
[debug]       Load.apply: resolveProjects took 0.2073ms
[debug]       Load.apply: finalTransforms took 13.9837ms
[debug]       Load.apply: config.delegates took 0.7271ms
[debug]       Load.apply: Def.make(settings)... took 124.1986ms
[debug]       Load.apply: structureIndex took 51.8606ms
[debug]       Load.apply: mkStreams took 0.009ms
[info] loading project definition from C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8575.4988ms
[debug]     Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1
[debug]       Load.loadUnit: mkEval took 0.4778ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3927 ms
[info] loading settings for project week1 from build.sbt ...
[debug]         Load.resolveProject(week1) took 56.2614ms
[debug]       Load.loadTransitive: finalizeProject(Project(id week1, base: C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1, plugins: List(<none>))) took 61.9838ms
[debug] [Loading] Done in C:\Users\shiva\Documents\AB_TRAINING\fpp-scala\week1, returning: (week1)
[debug]     Load.loadUnit: loadedProjectsRaw took 1621.6101ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.9569ms
[debug]   Load.loadUnit(file:/C:/Users/shiva/Documents/AB_TRAINING/fpp-scala/week1/, ...) took 10214.1293ms
[debug] Load.apply: load took 10216.3969ms
[debug] Load.apply: resolveProjects took 0.2147ms
[debug] Load.apply: finalTransforms took 41.6505ms
[debug] Load.apply: config.delegates took 0.5859ms
[debug] Load.apply: Def.make(settings)... took 112.96ms
[debug] Load.apply: structureIndex took 31.7994ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to week1 (in build file:/C:/Users/shiva/Documents/AB_TRAINING/fpp-scala/week1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52519 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52519, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to week1 (in build file:/C:/Users/shiva/Documents/AB_TRAINING/fpp-scala/week1/)
[debug] > Exec(idea-shell, None, None)
